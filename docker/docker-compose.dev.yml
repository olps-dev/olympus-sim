# Development Docker Compose Configuration
# Includes additional development tools and debugging features

version: '3.8'

services:
  # Inherit from main docker-compose.yml and add dev features
  mosquitto:
    extends:
      file: docker-compose.yml
      service: mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"  # WebSocket port for debugging

  simulation:
    extends:
      file: docker-compose.yml
      service: simulation
    environment:
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
      - NETWORK_CONDITION=good
      - SIMULATION_MODE=development
      - LOG_LEVEL=DEBUG
    volumes:
      - ./metrics:/app/metrics
      - ./network:/app/network
      - ./automation:/app/automation
      - ./sim:/app/sim
      - ./tests:/app/tests
      - simulation_logs:/app/logs

  dashboard:
    extends:
      file: docker-compose.yml
      service: dashboard
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
    volumes:
      - ./dashboard:/app
      - ./metrics:/app/metrics:ro
    ports:
      - "5000:5000"
      - "5678:5678"  # Debug port

  # Development Tools
  mqtt-explorer:
    image: smeagolworms4/mqtt-explorer
    container_name: olympus-mqtt-explorer
    ports:
      - "4000:4000"
    depends_on:
      - mosquitto
    networks:
      - olympus-network

  # Optional: Database for development
  postgres:
    image: postgres:13
    container_name: olympus-postgres-dev
    environment:
      - POSTGRES_DB=olympus_dev
      - POSTGRES_USER=olympus
      - POSTGRES_PASSWORD=dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - olympus-network

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    container_name: olympus-redis-dev
    ports:
      - "6379:6379"
    networks:
      - olympus-network

  # Development metrics viewer
  grafana:
    image: grafana/grafana:latest
    container_name: olympus-grafana-dev
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=dev
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_dev_data:/var/lib/grafana
      - ./infra/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - olympus-network

volumes:
  postgres_dev_data:
    driver: local
  grafana_dev_data:
    driver: local

networks:
  olympus-network:
    external: true